/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab5_jamilgarcia;

import java.util.ArrayList;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author JamilGarc√≠a
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        menu_popup = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_EscuaNombre = new javax.swing.JTextField();
        tf_EscuaLugar = new javax.swing.JTextField();
        rb_heroe = new javax.swing.JRadioButton();
        rb_villano = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jl_escuadrones = new javax.swing.JList<>();
        b_EscuaAgregar = new javax.swing.JButton();
        b_EscuaModificar = new javax.swing.JButton();
        b_EscuaEliminar = new javax.swing.JButton();
        b_Actualizar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tf_PerNombre = new javax.swing.JTextField();
        tf_PerPoder = new javax.swing.JTextField();
        tf_PerDebilidad = new javax.swing.JTextField();
        cb_Escuadron = new javax.swing.JComboBox<>();
        sp_Fuerza = new javax.swing.JSpinner();
        sp_Fisico = new javax.swing.JSpinner();
        sp_mental = new javax.swing.JSpinner();
        b_PerModificar = new javax.swing.JButton();
        b_PerAgregar = new javax.swing.JButton();
        b_PerEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jl_Heroes = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jl_Villanos = new javax.swing.JList<>();
        b_ActualizarListas = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt_Arbol = new javax.swing.JTree();
        b_Duelo = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jl_equipo1 = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jl_equipo2 = new javax.swing.JList<>();
        b_ActualizarArbol = new javax.swing.JButton();
        b_Listas = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menu_popup.add(jMenuItem1);

        jMenu1.setText("jMenu1");
        menu_popup.add(jMenu1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Escuadrones");

        jLabel2.setText("Nombre: ");

        jLabel3.setText("Lugar de Base: ");

        jLabel4.setText("TIpo:");

        buttonGroup1.add(rb_heroe);
        rb_heroe.setSelected(true);
        rb_heroe.setText("Herioe");

        buttonGroup1.add(rb_villano);
        rb_villano.setText("Villano");

        jl_escuadrones.setModel(new DefaultListModel());
        jl_escuadrones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_escuadronesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jl_escuadrones);

        b_EscuaAgregar.setText("Agregar");
        b_EscuaAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_EscuaAgregarMouseClicked(evt);
            }
        });

        b_EscuaModificar.setText("Modificar");
        b_EscuaModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_EscuaModificarMouseClicked(evt);
            }
        });

        b_EscuaEliminar.setText("Eliminar");
        b_EscuaEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_EscuaEliminarMouseClicked(evt);
            }
        });
        b_EscuaEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_EscuaEliminarActionPerformed(evt);
            }
        });

        b_Actualizar.setText("Actualizar Lista");
        b_Actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_ActualizarMouseClicked(evt);
            }
        });

        jLabel14.setText("Para modificar, toque el Elemento que quiera modificar, lo modifica y luego atualiza la tabla");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(54, 54, 54)
                                    .addComponent(tf_EscuaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(tf_EscuaLugar)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(43, 43, 43)
                                .addComponent(rb_heroe)
                                .addGap(18, 18, 18)
                                .addComponent(rb_villano)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(b_EscuaEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(b_EscuaAgregar)
                                .addComponent(b_EscuaModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(b_Actualizar))
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel14)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tf_EscuaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_EscuaAgregar))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tf_EscuaLugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(rb_heroe)
                                    .addComponent(rb_villano)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(b_EscuaModificar)))
                        .addGap(33, 33, 33)
                        .addComponent(b_EscuaEliminar)
                        .addGap(37, 37, 37)
                        .addComponent(b_Actualizar)))
                .addGap(53, 53, 53)
                .addComponent(jLabel14)
                .addContainerGap(194, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Escuadrones", jPanel1);

        jLabel5.setText("Personajes");

        jLabel6.setText("Nombre:");

        jLabel7.setText("Poder:");

        jLabel8.setText("Debilidad:");

        jLabel9.setText("Escuadron:");

        jLabel10.setText("Fuerza:");

        jLabel11.setText("Fisico:");

        jLabel12.setText("Mental:");

        b_PerModificar.setText("Modificar");
        b_PerModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_PerModificarMouseClicked(evt);
            }
        });

        b_PerAgregar.setText("Agregar");
        b_PerAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_PerAgregarMouseClicked(evt);
            }
        });

        b_PerEliminar.setText("Eliminar");
        b_PerEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_PerEliminarMouseClicked(evt);
            }
        });

        jl_Heroes.setModel(new DefaultListModel());
        jl_Heroes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_HeroesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jl_Heroes);

        jl_Villanos.setModel(new DefaultListModel());
        jScrollPane3.setViewportView(jl_Villanos);

        b_ActualizarListas.setText("Actualizar Listas");
        b_ActualizarListas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_ActualizarListasMouseClicked(evt);
            }
        });

        jLabel15.setText("Para modificar, toque el Elemento que quiera modificar, lo modifica y luego atualiza la tabla");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_PerDebilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_PerPoder, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_PerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sp_mental, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cb_Escuadron, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(sp_Fuerza, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(sp_Fisico, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(0, 0, Short.MAX_VALUE))))))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(b_PerModificar)
                                .addComponent(b_PerEliminar)
                                .addComponent(b_PerAgregar))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(b_ActualizarListas)
                                .addGap(7, 7, 7)))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel15)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(tf_PerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(b_PerAgregar)))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tf_PerPoder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(tf_PerDebilidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(b_PerModificar)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(cb_Escuadron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(b_PerEliminar))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(sp_Fuerza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(sp_Fisico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(sp_mental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(b_ActualizarListas))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Personajes", jPanel2);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Escuadrones");
        jt_Arbol.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jt_Arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_ArbolMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jt_Arbol);

        b_Duelo.setText("Duelo ");
        b_Duelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_DueloMouseClicked(evt);
            }
        });

        jLabel13.setText("VS");

        jl_equipo1.setModel(new DefaultListModel());
        jScrollPane5.setViewportView(jl_equipo1);

        jl_equipo2.setModel(new DefaultListModel());
        jScrollPane6.setViewportView(jl_equipo2);

        b_ActualizarArbol.setText("Actualizar Arbol");
        b_ActualizarArbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_ActualizarArbolMouseClicked(evt);
            }
        });

        b_Listas.setText("Actualizar LIstas");
        b_Listas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_ListasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b_Duelo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addComponent(jLabel13)
                                        .addGap(43, 43, 43))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b_ActualizarArbol)))))
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(b_Listas)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_ActualizarArbol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(b_Listas)
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(21, 21, 21)
                        .addComponent(b_Duelo)
                        .addGap(128, 128, 128))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(217, 217, 217))))
        );

        jTabbedPane1.addTab("Simulacion", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_EscuaAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_EscuaAgregarMouseClicked
        // TODO add your handling code here:
        try {
            String nombre, lugar, tipo;
            nombre = tf_EscuaNombre.getText();
            lugar = tf_EscuaLugar.getText();
            if (rb_heroe.isSelected()) {
                tipo = "Heroe";
            } else {
                tipo = "Villano";
            }
            Escuadrones.add(new Escuadron(nombre, lugar, null, tipo));
            JOptionPane.showMessageDialog(this, "Agregado con exito!!!");
            tf_EscuaNombre.setText("");
            tf_EscuaLugar.setText("");
            DefaultComboBoxModel model
                = (DefaultComboBoxModel) cb_Escuadron.getModel();
        for (int i = 0; i < Escuadrones.size(); i++) {
            model.addElement(Escuadrones.get(i));
        }
        cb_Escuadron.setModel(model);
        
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Algo sali√≥ mal, reivse los datos");
        }

    }//GEN-LAST:event_b_EscuaAgregarMouseClicked

    private void jl_escuadronesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_escuadronesMouseClicked
        // TODO add your handling code here:
        try {
            System.out.println(jl_escuadrones.getSelectedIndex());
            int flag = jl_escuadrones.getSelectedIndex();
            tf_EscuaNombre.setText(Escuadrones.get(flag).getNombreEs());
            tf_EscuaLugar.setText(Escuadrones.get(flag).getLugar());
            if (Escuadrones.get(flag).getTipo().equals("Heroe")) {
                rb_heroe.setSelected(true);
            } else {
                rb_villano.setSelected(false);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Algo salio mal, llamar al administrador");
        }

    }//GEN-LAST:event_jl_escuadronesMouseClicked

    private void b_EscuaEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_EscuaEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b_EscuaEliminarActionPerformed

    private void b_EscuaEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_EscuaEliminarMouseClicked
        // TODO add your handling code here:
        try {
            System.out.println(jl_escuadrones.getSelectedIndex());
            int flag = jl_escuadrones.getSelectedIndex();
            for (int i = 0; i < Personajes.size(); i++) {
                if (Personajes.get(i).getEscuadron().getNombreEs().equals(Escuadrones.get(i).getNombreEs())) {
                    Personajes.remove(i);
                }
            }
            Escuadrones.remove(flag);
            JOptionPane.showMessageDialog(this, "Removido con exito!!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Algo salio mal!!");
        }

    }//GEN-LAST:event_b_EscuaEliminarMouseClicked

    private void b_PerAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_PerAgregarMouseClicked
        // TODO add your handling code here:
        try {
            String nombre, poder, debilidad;
            int fuerza, fisico, mental, flag = cb_Escuadron.getSelectedIndex();
            Escuadron escua;
            ArrayList<SuperHSuperV> Per;
            nombre = tf_PerNombre.getText();
            poder = tf_PerPoder.getText();
            debilidad = tf_PerDebilidad.getText();
            escua = Escuadrones.get(flag);
            Per = escua.getLista();
            fuerza = sp_Fuerza.getComponentCount();
            fisico = sp_Fisico.getComponentCount();
            mental = sp_mental.getComponentCount();
            if (fuerza + fisico + mental == 100) {
                Personajes.add(new SuperHSuperV(nombre, poder, debilidad, escua, fuerza, fisico, mental));
                Per.add(new SuperHSuperV(nombre, poder, debilidad, escua, fuerza, fisico, mental));
                Escuadrones.get(flag).setLista(Per);
            } else {
                JOptionPane.showMessageDialog(this, "No esta capacitado para ser heroe o villano");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Upps, algo salio mal");
        }

    }//GEN-LAST:event_b_PerAgregarMouseClicked

    private void b_EscuaModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_EscuaModificarMouseClicked
        // TODO add your handling code here:
        try {
            int flag = jl_escuadrones.getSelectedIndex();
            String nombre, lugar, tipo;
            nombre = tf_EscuaNombre.getText();
            lugar = tf_EscuaLugar.getText();
            if (rb_heroe.isSelected()) {
                tipo = "Heroe";
            } else {
                tipo = "Villano";
            }
            Escuadrones.get(flag).setNombreEs(nombre);
            Escuadrones.get(flag).setLugar(lugar);
            Escuadrones.get(flag).setTipo(tipo);
            JOptionPane.showMessageDialog(this, "Modificado con exito!!!");
            tf_EscuaNombre.setText("");
            tf_EscuaLugar.setText("");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Algo sali√≥ mal, reivse los datos");
        }

    }//GEN-LAST:event_b_EscuaModificarMouseClicked

    private void jl_HeroesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_HeroesMouseClicked
        // TODO add your handling code here:
        try {
            System.out.println(jl_Heroes.getSelectedIndex());
            int flag = jl_Heroes.getSelectedIndex();
            tf_PerNombre.setText(Personajes.get(flag).getNombre());
            tf_PerPoder.setText(Personajes.get(flag).getPoder());
            tf_PerDebilidad.setText(Personajes.get(flag).getDebilidad());
            sp_Fuerza.setValue(Personajes.get(flag).getFuerza());
            sp_Fisico.setValue(Personajes.get(flag).getFisica());
            sp_mental.setValue(Personajes.get(flag).getMental());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Algo salio mal, llamar al administrador");
        }
    }//GEN-LAST:event_jl_HeroesMouseClicked

    private void b_PerModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_PerModificarMouseClicked
        // TODO add your handling code here:
        try {
            String nombre, poder, debilidad;
            int fuerza, fisico, mental, flag = cb_Escuadron.getSelectedIndex();
            Escuadron escua;
            ArrayList<SuperHSuperV> Per;
            boolean Fnombre = true;
            nombre = tf_PerNombre.getText();
            poder = tf_PerPoder.getText();
            debilidad = tf_PerDebilidad.getText();
            escua = Escuadrones.get(flag);
            Per = escua.getLista();
            fuerza = sp_Fuerza.getComponentCount();
            fisico = sp_Fisico.getComponentCount();
            mental = sp_mental.getComponentCount();
            for (int i = 0; i < Personajes.size(); i++) {
                if (nombre.equals(Personajes.get(i).getNombre())) {
                    Fnombre = false;
                }
            }

            if (fuerza + fisico + mental == 100 && Fnombre == true) {
                Personajes.add(new SuperHSuperV(nombre, poder, debilidad, escua, fuerza, fisico, mental));
                Per.add(new SuperHSuperV(nombre, poder, debilidad, escua, fuerza, fisico, mental));
                Escuadrones.get(flag).setLista(Per);
            } else {
                JOptionPane.showMessageDialog(this, "No esta capacitado para ser heroe o villano");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Upps, algo salio mal");
        }
    }//GEN-LAST:event_b_PerModificarMouseClicked

    private void b_PerEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_PerEliminarMouseClicked
        // TODO add your handling code here:
        try {
            int flag;
            if (jl_Heroes.isSelectionEmpty()) {
                flag = jl_Heroes.getSelectedIndex();
            } else {
                flag = jl_Villanos.getSelectedIndex();
            }
            String nombreFlag = Personajes.get(flag).getNombre();
            for (int i = 0; i < Escuadrones.size(); i++) {
                for (int j = 0; j < Escuadrones.get(i).getLista().size(); j++) {
                    if (Escuadrones.get(i).getLista().get(j).getNombre().equals(nombreFlag)) {
                        Escuadrones.get(i).getLista().remove(j);
                    }
                }
            }
            Personajes.remove(flag);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Algo salio mal!!!");
        }
    }//GEN-LAST:event_b_PerEliminarMouseClicked

    private void b_DueloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_DueloMouseClicked
        // TODO add your handling code here:
        Random ran = new Random();
        int flag = ran.nextInt(2), equipo1, equipo2;
        equipo1 = jl_equipo1.getSelectedIndex();
        equipo2 = jl_equipo2.getSelectedIndex();
        switch (flag) {
            case 0:
                JOptionPane.showMessageDialog(this, "Duelo de Fuerza");
                int fuerza1,
                 fuerza2;
                fuerza1 = Escuadrones.get(equipo1).getLider().getFuerza();
                fuerza2 = Escuadrones.get(equipo2).getLider().getFuerza();
                if (fuerza1 > fuerza2) {
                    JOptionPane.showMessageDialog(this, "El escuadron " + Escuadrones.get(equipo1).getNombreEs() + " ha ganado!!");
                    for (int i = 0; i < Personajes.size(); i++) {
                        String nombre = Personajes.get(i).getNombre();
                        for (int j = 0; j < Escuadrones.size(); j++) {
                            for (int k = 0; k < Escuadrones.get(i).getLista().size(); k++) {
                                if (Escuadrones.get(equipo2).getLista().get(i).getNombre().equals(nombre)) {
                                    Personajes.remove(i);
                                }
                            }
                        }
                    }
                    Escuadrones.remove(equipo2);
                } else if (fuerza1 < fuerza2) {
                    JOptionPane.showMessageDialog(this, "El escuadron " + Escuadrones.get(equipo2).getNombreEs() + " ha ganado!!");
                    for (int i = 0; i < Personajes.size(); i++) {
                        String nombre = Personajes.get(i).getNombre();
                        for (int j = 0; j < Escuadrones.size(); j++) {
                            for (int k = 0; k < Escuadrones.get(i).getLista().size(); k++) {
                                if (Escuadrones.get(equipo1).getLista().get(i).getNombre().equals(nombre)) {
                                    Personajes.remove(i);
                                }
                            }
                        }
                    }
                    Escuadrones.remove(equipo1);
                } else {
                    JOptionPane.showMessageDialog(this, "Empate!!!!");
                }

                break;
            case 1:
                JOptionPane.showMessageDialog(this, "Duelo de Habilidad Fisica");
                int fisico1,
                 fisico2;
                fisico1 = Escuadrones.get(equipo1).getLider().getFisica();
                fisico2 = Escuadrones.get(equipo2).getLider().getFisica();
                if (fisico1 > fisico2) {
                    JOptionPane.showMessageDialog(this, "El escuadron " + Escuadrones.get(equipo1).getNombreEs() + " ha ganado!!");
                    for (int i = 0; i < Personajes.size(); i++) {
                        String nombre = Personajes.get(i).getNombre();
                        for (int j = 0; j < Escuadrones.size(); j++) {
                            for (int k = 0; k < Escuadrones.get(i).getLista().size(); k++) {
                                if (Escuadrones.get(equipo2).getLista().get(i).getNombre().equals(nombre)) {
                                    Personajes.remove(i);
                                }
                            }
                        }
                    }
                    Escuadrones.remove(equipo2);
                } else if (fisico1 < fisico2) {
                    JOptionPane.showMessageDialog(this, "El escuadron " + Escuadrones.get(equipo2).getNombreEs() + " ha ganado!!");
                    for (int i = 0; i < Personajes.size(); i++) {
                        String nombre = Personajes.get(i).getNombre();
                        for (int j = 0; j < Escuadrones.size(); j++) {
                            for (int k = 0; k < Escuadrones.get(i).getLista().size(); k++) {
                                if (Escuadrones.get(equipo1).getLista().get(i).getNombre().equals(nombre)) {
                                    Personajes.remove(i);
                                }
                            }
                        }
                    }
                    Escuadrones.remove(equipo1);
                } else {
                    JOptionPane.showMessageDialog(this, "Empate!!!!");
                }

                break;
            case 2:
                JOptionPane.showMessageDialog(this, "Duelo de Habilidad Mental");
                int mental1,
                 mental2;
                mental1 = Escuadrones.get(equipo1).getLider().getMental();
                mental2 = Escuadrones.get(equipo2).getLider().getMental();
                if (mental1 > mental2) {
                    JOptionPane.showMessageDialog(this, "El escuadron " + Escuadrones.get(equipo1).getNombreEs() + " ha ganado!!");
                    for (int i = 0; i < Personajes.size(); i++) {
                        String nombre = Personajes.get(i).getNombre();
                        for (int j = 0; j < Escuadrones.size(); j++) {
                            for (int k = 0; k < Escuadrones.get(i).getLista().size(); k++) {
                                if (Escuadrones.get(equipo2).getLista().get(i).getNombre().equals(nombre)) {
                                    Personajes.remove(i);
                                }
                            }
                        }
                    }
                    Escuadrones.remove(equipo2);
                } else if (mental1 < mental2) {
                    JOptionPane.showMessageDialog(this, "El escuadron " + Escuadrones.get(equipo2).getNombreEs() + " ha ganado!!");
                    for (int i = 0; i < Personajes.size(); i++) {
                        String nombre = Personajes.get(i).getNombre();
                        for (int j = 0; j < Escuadrones.size(); j++) {
                            for (int k = 0; k < Escuadrones.get(i).getLista().size(); k++) {
                                if (Escuadrones.get(equipo1).getLista().get(i).getNombre().equals(nombre)) {
                                    Personajes.remove(i);
                                }
                            }
                        }
                    }
                    Escuadrones.remove(equipo1);
                } else {
                    JOptionPane.showMessageDialog(this, "Empate!!!!");
                }

                break;
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_b_DueloMouseClicked

    private void b_ActualizarArbolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_ActualizarArbolMouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < Escuadrones.size(); i++) {

            String nombreEs = Escuadrones.get(i).getNombreEs();
            boolean flag;
            if (Escuadrones.get(i).getTipo().equals("Heroe")) {
                flag = true;
            } else {
                flag = false;
            }

            DefaultTreeModel arbol = (DefaultTreeModel) jt_Arbol.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) arbol.getRoot();
            DefaultMutableTreeNode escuadron;
            escuadron
                    = new DefaultMutableTreeNode(nombreEs);

            raiz.add(escuadron);
            for (int j = 0; j < Escuadrones.get(i).getLista().size(); j++) {
                DefaultMutableTreeNode raiz2 = (DefaultMutableTreeNode) arbol.getRoot();
                DefaultMutableTreeNode Super;
                Super
                        = new DefaultMutableTreeNode(Escuadrones.get(i).getLista().get(j));
                DefaultMutableTreeNode raiz3 = (DefaultMutableTreeNode) arbol.getRoot();
                DefaultMutableTreeNode PYD;
                if (flag == true) {
                    PYD
                            = new DefaultMutableTreeNode(Escuadrones.get(i).getLista().get(j).getPoder());
                } else {
                    PYD
                            = new DefaultMutableTreeNode(Escuadrones.get(i).getLista().get(j).getDebilidad());
                }
            }
            arbol.reload();
        }

    }//GEN-LAST:event_b_ActualizarArbolMouseClicked

    private void b_ActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_ActualizarMouseClicked
        // TODO add your handling code here:
         DefaultListModel lista
                = (DefaultListModel) jl_escuadrones.getModel();
        for (int i = 0; i < Escuadrones.size(); i++) {
            lista.addElement(Escuadrones.get(i));
        }
        jl_escuadrones.setModel(lista);
    }//GEN-LAST:event_b_ActualizarMouseClicked

    private void b_ActualizarListasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_ActualizarListasMouseClicked
        // TODO add your handling code here:
        DefaultListModel lista
                = (DefaultListModel) jl_Heroes.getModel();
        DefaultListModel lista2
                = (DefaultListModel) jl_Villanos.getModel();
       
        for (int i = 0; i < Personajes.size(); i++) {
            if (Personajes.get(i).getEscuadron().getTipo().equals("Heroe")){
                lista.addElement(Personajes.get(i));
            
            } else {
                lista2.addElement(Personajes.get(i));
            }
        }
        jl_Heroes.setModel(lista);                                   
        jl_Villanos.setModel(lista2);                                   
    }//GEN-LAST:event_b_ActualizarListasMouseClicked

    private void b_ListasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_ListasMouseClicked
        // TODO add your handling code here:
        DefaultListModel lista
                = (DefaultListModel) jl_equipo1.getModel();
        DefaultListModel lista2
                = (DefaultListModel) jl_equipo2.getModel();
        for (int i = 0; i < Personajes.size(); i++) {
            lista.addElement(Personajes.get(i));
            lista2.addElement(Personajes.get(i));
            
        }
        jl_equipo1.setModel(lista); 
        jl_equipo2.setModel(lista2); 
    }//GEN-LAST:event_b_ListasMouseClicked

    private void jt_ArbolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_ArbolMouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {
            //seleccionar un nodo con click derecho
            int row = jt_Arbol.getClosestRowForLocation(
                    evt.getX(), evt.getY());
            jt_Arbol.setSelectionRow(row);
            Object v1
                    = jt_Arbol.getSelectionPath().
                            getLastPathComponent();
            selected = (DefaultMutableTreeNode) v1;
            if (selected.getUserObject() instanceof SuperHSuperV) {
                Personaje_Selected
                        = (SuperHSuperV) selected.getUserObject();
                menu_popup.show(evt.getComponent(),
                        evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jt_ArbolMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_Actualizar;
    private javax.swing.JButton b_ActualizarArbol;
    private javax.swing.JButton b_ActualizarListas;
    private javax.swing.JButton b_Duelo;
    private javax.swing.JButton b_EscuaAgregar;
    private javax.swing.JButton b_EscuaEliminar;
    private javax.swing.JButton b_EscuaModificar;
    private javax.swing.JButton b_Listas;
    private javax.swing.JButton b_PerAgregar;
    private javax.swing.JButton b_PerEliminar;
    private javax.swing.JButton b_PerModificar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cb_Escuadron;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> jl_Heroes;
    private javax.swing.JList<String> jl_Villanos;
    private javax.swing.JList<String> jl_equipo1;
    private javax.swing.JList<String> jl_equipo2;
    private javax.swing.JList<String> jl_escuadrones;
    private javax.swing.JTree jt_Arbol;
    private javax.swing.JPopupMenu menu_popup;
    private javax.swing.JRadioButton rb_heroe;
    private javax.swing.JRadioButton rb_villano;
    private javax.swing.JSpinner sp_Fisico;
    private javax.swing.JSpinner sp_Fuerza;
    private javax.swing.JSpinner sp_mental;
    private javax.swing.JTextField tf_EscuaLugar;
    private javax.swing.JTextField tf_EscuaNombre;
    private javax.swing.JTextField tf_PerDebilidad;
    private javax.swing.JTextField tf_PerNombre;
    private javax.swing.JTextField tf_PerPoder;
    // End of variables declaration//GEN-END:variables
    ArrayList<Escuadron> Escuadrones = new ArrayList();
    ArrayList<SuperHSuperV> Personajes = new ArrayList();
    DefaultMutableTreeNode selected;
    SuperHSuperV Personaje_Selected;
}
